#!/bin/bash
# TODO -Simon- status: [on-going]
# build the environment within one cmd

# you may need to upload your CL 
# config the gitcoolies,update the passwd
# firefox --new-window https://www.googlesource.com/new-password
# cat ~/.gitcookies 

# config the ~/.netrc file
# if you plan to make changes to public code,no sure weather it need or not [?]
# content as below:
# machine chromium.googlesource.com login username password password
# machine chromium-review.googlesource.com login username password password

# more info: please refer to the link
# http://www.chromium.org/chromium-os/quick-start-guide
#	https://sites.google.com/a/google.com/chromeos-partners/pages/tech-docs/getting-started/getting-access-to-source-code

#	input the board name
BOARD=coral

#which directory the source repo will put 
SOURCE_REPO=$HOME/master

#1. install git and tools
sudo apt-get install git-core gitk git-gui subversion curl lvm2 thin-provisioning-tools python-pkg-resources

#2. install depot_tools in order to use 'repo sync' command
git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
#add depot_tools to $PATH
export PATH=`pwd`/depot_tools:"$PATH"
#add PATH to .bashrc
echo "export PATH=\`pwd\`/depot_tools:\"\$PATH\"" >> ~/.bashrc

#3. tweak sudoers configuration,for using 'cros_sdk' command
cd /tmp
cat > ./sudo_editor <<EOF
#!/bin/sh
echo Defaults \!tty_tickets > \$1          # Entering your password in one shell affects all shells
echo Defaults timestamp_timeout=180 >> \$1 # Time between re-requesting your password, in minutes
EOF
chmod +x ./sudo_editor
sudo EDITOR=./sudo_editor visudo -f /etc/sudoers.d/relax_requirements

#4. get the source
mkdir -p $SOURCE_REPO
cd ${SOURCE_REPO}
repo init -u https://chromium.googlesource.com/chromiumos/manifest.git
# Optional: Make any changes to .repo/local_manifests/local_manifest.xml before syncing
repo sync

#5. build chromium OS,make sure you are within the source tree before running these commands
export BOARD=amd64-generic
cros_sdk -- ./setup_board --board=${BOARD}
cros_sdk -- ./build_packages --board=${BOARD}

#6. build image
cros_sdk -- ./build_image --board=${BOARD}

# copy this image onto a usb drive.  Insert the usb stick youâ€™d like to use and run:
# cros_sdk -- cros flash --board=${BOARD} usb://



